name: Api docker publish

on:
  release:
    types: [published]

jobs:
  api-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: npm
          cache-dependency-path: api/package-lock.json

      - name: Cache node_modules folder
        uses: actions/cache@v4
        id: cache
        with:
          path: api/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('api/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run tests
        run: npm test

  build-and-push:
    needs: api-test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image name
        id: repo
        run: |
          echo "IMAGE=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE }}:latest
            ghcr.io/${{ env.IMAGE }}:${{ github.ref_name }}
